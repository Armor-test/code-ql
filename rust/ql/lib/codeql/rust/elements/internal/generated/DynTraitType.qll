// generated by codegen, do not edit
/**
 * This module provides the generated definition of `DynTraitType`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.TypeBoundType
import codeql.rust.elements.internal.TypeImpl::Impl as TypeImpl

/**
 * INTERNAL: This module contains the fully generated definition of `DynTraitType` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::DynTraitType` class directly.
   * Use the subclass `DynTraitType`, where the following predicates are available.
   */
  class DynTraitType extends Synth::TDynTraitType, TypeImpl::Type {
    override string getAPrimaryQlClass() { result = "DynTraitType" }

    /**
     * Gets the `index`th type bound of this dyn trait type (0-based).
     */
    TypeBoundType getTypeBound(int index) {
      result =
        Synth::convertTypeBoundTypeFromRaw(Synth::convertDynTraitTypeToRaw(this)
              .(Raw::DynTraitType)
              .getTypeBound(index))
    }

    /**
     * Gets any of the type bounds of this dyn trait type.
     */
    final TypeBoundType getATypeBound() { result = this.getTypeBound(_) }

    /**
     * Gets the number of type bounds of this dyn trait type.
     */
    final int getNumberOfTypeBounds() { result = count(int i | exists(this.getTypeBound(i))) }
  }
}
