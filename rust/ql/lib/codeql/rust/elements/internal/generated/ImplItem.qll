// generated by codegen, do not edit
/**
 * This module provides the generated definition of `ImplItem`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.internal.ElementImpl::Impl as ElementImpl
import codeql.rust.elements.FunctionType
import codeql.rust.elements.Type

/**
 * INTERNAL: This module contains the fully generated definition of `ImplItem` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::ImplItem` class directly.
   * Use the subclass `ImplItem`, where the following predicates are available.
   */
  class ImplItem extends Synth::TImplItem, ElementImpl::Element {
    override string getAPrimaryQlClass() { result = "ImplItem" }

    /**
     * Gets the `index`th target trait of this impl item (0-based).
     */
    string getTargetTrait(int index) {
      result = Synth::convertImplItemToRaw(this).(Raw::ImplItem).getTargetTrait(index)
    }

    /**
     * Gets any of the target traits of this impl item.
     */
    final string getATargetTrait() { result = this.getTargetTrait(_) }

    /**
     * Gets the number of target traits of this impl item.
     */
    final int getNumberOfTargetTraits() { result = count(int i | exists(this.getTargetTrait(i))) }

    /**
     * Gets the self ty of this impl item.
     */
    Type getSelfTy() {
      result =
        Synth::convertTypeFromRaw(Synth::convertImplItemToRaw(this).(Raw::ImplItem).getSelfTy())
    }

    /**
     * Gets the `index`th method name of this impl item (0-based).
     */
    string getMethodName(int index) {
      result = Synth::convertImplItemToRaw(this).(Raw::ImplItem).getMethodName(index)
    }

    /**
     * Gets any of the method names of this impl item.
     */
    final string getAMethodName() { result = this.getMethodName(_) }

    /**
     * Gets the number of method names of this impl item.
     */
    final int getNumberOfMethodNames() { result = count(int i | exists(this.getMethodName(i))) }

    /**
     * Gets the `index`th method type of this impl item (0-based).
     */
    FunctionType getMethodType(int index) {
      result =
        Synth::convertFunctionTypeFromRaw(Synth::convertImplItemToRaw(this)
              .(Raw::ImplItem)
              .getMethodType(index))
    }

    /**
     * Gets any of the method types of this impl item.
     */
    final FunctionType getAMethodType() { result = this.getMethodType(_) }

    /**
     * Gets the number of method types of this impl item.
     */
    final int getNumberOfMethodTypes() { result = count(int i | exists(this.getMethodType(i))) }
  }
}
