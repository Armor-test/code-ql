// generated by codegen, do not edit
/**
 * This module provides the generated definition of `TraitItem`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.FunctionType
import codeql.rust.elements.internal.TypeItemImpl::Impl as TypeItemImpl

/**
 * INTERNAL: This module contains the fully generated definition of `TraitItem` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::TraitItem` class directly.
   * Use the subclass `TraitItem`, where the following predicates are available.
   */
  class TraitItem extends Synth::TTraitItem, TypeItemImpl::TypeItem {
    override string getAPrimaryQlClass() { result = "TraitItem" }

    /**
     * Gets the name of this trait item.
     */
    string getName() { result = Synth::convertTraitItemToRaw(this).(Raw::TraitItem).getName() }

    /**
     * Gets the `index`th method name of this trait item (0-based).
     */
    string getMethodName(int index) {
      result = Synth::convertTraitItemToRaw(this).(Raw::TraitItem).getMethodName(index)
    }

    /**
     * Gets any of the method names of this trait item.
     */
    final string getAMethodName() { result = this.getMethodName(_) }

    /**
     * Gets the number of method names of this trait item.
     */
    final int getNumberOfMethodNames() { result = count(int i | exists(this.getMethodName(i))) }

    /**
     * Gets the `index`th method type of this trait item (0-based).
     */
    FunctionType getMethodType(int index) {
      result =
        Synth::convertFunctionTypeFromRaw(Synth::convertTraitItemToRaw(this)
              .(Raw::TraitItem)
              .getMethodType(index))
    }

    /**
     * Gets any of the method types of this trait item.
     */
    final FunctionType getAMethodType() { result = this.getMethodType(_) }

    /**
     * Gets the number of method types of this trait item.
     */
    final int getNumberOfMethodTypes() { result = count(int i | exists(this.getMethodType(i))) }
  }
}
