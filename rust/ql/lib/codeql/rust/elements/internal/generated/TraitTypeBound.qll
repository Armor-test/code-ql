// generated by codegen, do not edit
/**
 * This module provides the generated definition of `TraitTypeBound`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.internal.TypeBoundTypeImpl::Impl as TypeBoundTypeImpl

/**
 * INTERNAL: This module contains the fully generated definition of `TraitTypeBound` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::TraitTypeBound` class directly.
   * Use the subclass `TraitTypeBound`, where the following predicates are available.
   */
  class TraitTypeBound extends Synth::TTraitTypeBound, TypeBoundTypeImpl::TypeBoundType {
    override string getAPrimaryQlClass() { result = "TraitTypeBound" }

    /**
     * Gets the `index`th path of this trait type bound (0-based).
     */
    string getPath(int index) {
      result = Synth::convertTraitTypeBoundToRaw(this).(Raw::TraitTypeBound).getPath(index)
    }

    /**
     * Gets any of the paths of this trait type bound.
     */
    final string getAPath() { result = this.getPath(_) }

    /**
     * Gets the number of paths of this trait type bound.
     */
    final int getNumberOfPaths() { result = count(int i | exists(this.getPath(i))) }
  }
}
