// generated by codegen, do not edit
/**
 * This module provides the generated definition of `ForLifetimeTypeBound`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.internal.TypeBoundTypeImpl::Impl as TypeBoundTypeImpl

/**
 * INTERNAL: This module contains the fully generated definition of `ForLifetimeTypeBound` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::ForLifetimeTypeBound` class directly.
   * Use the subclass `ForLifetimeTypeBound`, where the following predicates are available.
   */
  class ForLifetimeTypeBound extends Synth::TForLifetimeTypeBound, TypeBoundTypeImpl::TypeBoundType {
    override string getAPrimaryQlClass() { result = "ForLifetimeTypeBound" }

    /**
     * Gets the `index`th name of this for lifetime type bound (0-based).
     */
    string getName(int index) {
      result =
        Synth::convertForLifetimeTypeBoundToRaw(this).(Raw::ForLifetimeTypeBound).getName(index)
    }

    /**
     * Gets any of the names of this for lifetime type bound.
     */
    final string getAName() { result = this.getName(_) }

    /**
     * Gets the number of names of this for lifetime type bound.
     */
    final int getNumberOfNames() { result = count(int i | exists(this.getName(i))) }

    /**
     * Gets the `index`th path of this for lifetime type bound (0-based).
     */
    string getPath(int index) {
      result =
        Synth::convertForLifetimeTypeBoundToRaw(this).(Raw::ForLifetimeTypeBound).getPath(index)
    }

    /**
     * Gets any of the paths of this for lifetime type bound.
     */
    final string getAPath() { result = this.getPath(_) }

    /**
     * Gets the number of paths of this for lifetime type bound.
     */
    final int getNumberOfPaths() { result = count(int i | exists(this.getPath(i))) }
  }
}
